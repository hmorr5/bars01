from Tkinter import *
import math
import urllib2
import urllib
import re

root = Tk()     
top = Frame(root)
top.pack(side='top')

dt = {}
do = {}

d = {}
with open("data.txt") as f:
    for line in f:
       (nameid, itemid) = line.split()
       d[nameid] = itemid
       

d2 = {}
with open("data2.txt") as f:
    for line in f:
       (bar, c_num) = line.split()
       d2[bar] = int(c_num)

with open("data3.txt") as f:
    for line in f:
       (nameid, oreid) = line.split()
       d[nameid] = oreid
       

def bar_l():
    "gets the list of bars"
    for key in d:
        print key

def bars(itemid):
    "gets the bar price info. Type format : bars('Iron') " 
    a = ''
    if bar not in d:
       print 'That type of bar does not exist, please try again'
    else:
        a = d.get(bar)
        return 'The price of ' + str(bar) + ' bars are ' + str(a) + ' gold coins'
        
def c_num(bar):
    "gets the amount of coal needed"
    a = ''
    if bar not in d2:
        print 'That type of bar does not require coal, please try again'
    else:
        a = d2.get(bar)
        return 'The ' + str(bar) + ' bar requires ' + str(a) + ' coal per bar'

def fs(nameid):
   """grabs source code"""
   fileObj = open("data.txt", "w")
   clearstr = ""
   lastitem = ""
   cleartags = re.compile(r'<.*?>')
   request = urllib2.Request("http://www.runelocus.com/tools/itemlist.html?name=" + nameid+"&search=Search")
   response = urllib2.urlopen(request)
   html = response.read()
   startind = html.find("<tbody>")
   endind = html.find("</tbody>")
   iteminfo = html[startind:endind]
   trlist = [n for n in xrange(len(iteminfo)) if iteminfo.find('<td>', n) == n]
   tr_endlist = [n for n in xrange(len(iteminfo)) if iteminfo.find('</td>', n) == n]
   for num,content in enumerate(trlist):
      clearstr = cleartags.sub('',iteminfo[trlist[num]: tr_endlist[num]])
      if clearstr == "":
         a = cleartags.sub('',iteminfo[trlist[num-1]: tr_endlist[num-1]])
         b = cleartags.sub('',iteminfo[trlist[num-2]: tr_endlist[num-2]])
         if a != lastitem:
            fileObj.write("{0},{1}\n".format(a, b))
         lastitem = cleartags.sub('',iteminfo[trlist[num-1]: tr_endlist[num-1]]) 


      
def Webinfo(nameid):
    """grabs source code"""
    itemid = d[nameid]
    request = urllib2.Request("http://services.runescape.com/m=itemdb_rs/" + nameid + "/" +"viewitem.ws?obj="+ itemid)
    response = urllib2.urlopen(request)
    html = response.read()
    startind = html.find("<td>")
    endind = html.find("</td>")
    iteminfo = html[startind:endind]
    price = iteminfo[4:]
    price = price.replace(",", "")
    dt.update({nameid:price})
    print 'The price of '+ nameid + ' is currently ' + str(price) + ' coins. '

s = StringVar()

rframe = Frame(top)
rframe.pack(side='top', padx=10, pady=20)

var = StringVar()
c = Checkbutton(
    rframe, text="Superheat?", variable=var,
    onvalue="Yes", offvalue="No"
    )
c.pack(side='left')

superheat = var.get()


def Calc(nameid, oreid, superheat):
    ca = int(d2[nameid])
    coalP = int(dt['Coal']) * ca
    barP = int(dt[nameid])
    natP = int(dt['Nature_rune'])
    oreP = int(dt[oreid])    
    if superheat == 'No':
        profit = barP - coalP - oreP
        print profit
    elif superheat == 'Yes':
        profit = barP - coalP - natP - oreP
        print profit
    else:
        print "Please enter Yes or No "

def findO(nameid):
    global oreid
    oreid = do[nameid]
    print oreid
    



r_entry = Label(rframe, textvariable=s)
r_entry.pack(side='left')

var = StringVar()
var.set('Iron_bar')
OptionMenu(root, var, 'Iron_Bar',"b","c").pack()
nameid = var.get()
 

def comp_s(event=None):
    global s
    s.set(bars('Gold'))


r_entry.bind('<Return>', comp_s)

compute = Button(rframe, text=' Gold ', command=Calc(nameid, oreid, superheat))
compute.pack(side='left')



def quit(event=None):
    root.destroy()
quit_button = Button(top, text='Goodbye, GUI World!', command=quit,
                     background='yellow', foreground='blue')
quit_button.pack(side='top', pady=5, fill='x')
root.bind('<q>', quit)

root.mainloop()

#links for data:
#http://services.runescape.com/m=itemdb_rs/results.ws     Just type in bar, ore and coal form the coresponding lists
#http://services.runescape.com/m=itemdb_rs/Nature_rune/viewitem.ws?obj=561      EXXTRA nature rune price

#Calculation:

#Profit = bar price - (coal Price * amount of coal) + ore price [optional + nature rune price]
#XpGain = smelthing xp [optional + superheat cast xp , magic] 
